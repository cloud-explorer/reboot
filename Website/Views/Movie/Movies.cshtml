@using Glass.Mapper.Sc.RenderField
@using PagedList.Mvc
@using Projects.Common.Core
@using Projects.Common.Glass
@using Projects.Models.Glass.Reboot.Items
@using Projects.Reboot.Core
@inherits Glass.Mapper.Sc.Web.Mvc.GlassView<PagedList.StaticPagedList<Movie>>
@{
    string searchText = QueryStringUtil.Get("keyword");
    searchText = (searchText ?? string.Empty);
}
<div class="col-md-9 col-sm-8">
    <form class="form-horizontal">
        <fieldset>
            <div class="form-group">
                <div class="input-group">
                    <input id="searchText" type="text" class="form-control" value="@searchText" placeholder="Search...">
                    <span class="input-group-btn">
                        <span id="searchButton" class="btn btn-default">@CommonTextUtil.GetTextFor("Search")</span>
                    </span>
                </div>
            </div>
        </fieldset>
    </form>
    @if (Model.Any())
    {
        <div class="alert alert-dismissable alert-warning">
            <button type="button" class="close" data-dismiss="alert">×</button>
            <p>@CommonTextUtil.GetTextFor("Found") <strong>@Model.Count()</strong> @CommonTextUtil.GetTextFor("Results For") @searchText  </p>
        </div>
    }
</div>

<div class="col-md-9 col-sm-8">
    <center>
        @Html.PagedListPager(Model, page => QueryStringUtil.AddAndGetNewQueryString("pageNumber", page.ToString()), PagedListRenderOptions.OnlyShowFivePagesAtATime)
    </center>
    @foreach (var movie in Model)
    {
        <div class="row">
            @using (BeginRenderLink(movie, m => m.GetInternalLink(string.Empty, "_self")))
            {
                <h3>@Editable(movie, m => m.Title)</h3>
            }

        </div>
        <div class="row">
            <div class="col-md-2 col-xs-4">
                @using (BeginRenderLink(movie, m => m.GetInternalLink(string.Empty, "_self")))
                {
                    @RenderImage(movie, m => m.Image, new ImageParameters { Class = "img-responsive", MaxWidth = 100 })
                }
            </div>
            <div>
                <div>

                    <div class="row">
                        @Editable(movie, m => m.Description)
                    </div>
                    <div class="row col-md-offset-0 col-xs-offset-4">
                        Release Date:
                        <span class="badge">
                            @movie.ReleaseDate.ToString("MMMM dd, yyyy")
                        </span>
                    </div>
                    <div class="row col-md-offset-0 col-xs-offset-4">
                        <div class="rateit" data-rateit-value="@movie.VoteAverage" data-rateit-ispreset="true"
                             data-rateit-readonly="true" data-rateit-max="10">

                        </div>
                        <span class="badge">@movie.VoteAverage<text>/10</text></span>
                    </div>
                    @if (movie.Genres.Any())
                    {
                        <div class="row col-md-offset-0 col-xs-offset-4">
                            <i class="fa fa-tags"></i>  Genre
                            @foreach (var genre in movie.Genres.Select(sl => GlassHtml.SitecoreContext.GetItem<Genre>(sl)).ToList())
                            {
                                <span class="badge">
                                    @genre.Title
                                </span>
                            }
                        </div>
                    }
                </div>
            </div>

        </div>
        <hr />
    }
    
    <center>
        @Html.PagedListPager(Model, page => QueryStringUtil.AddAndGetNewQueryString("pageNumber", page.ToString()), PagedListRenderOptions.OnlyShowFivePagesAtATime)
    </center>
</div>

